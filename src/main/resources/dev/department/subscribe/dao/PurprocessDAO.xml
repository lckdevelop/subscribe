<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"     
    "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.department.subscribe.dao.PurprocessDAO">

	<select id="selectCartList" parameterType="CartListDTO" resultType="CartListDTO">
		select b.name, a.qty, b.price as productPrice, a.price as memberPrice, b.thumbnail, b.no as productNo,
        b.categoryproduct_no as categoryproductNo, f.engname as brandengname, 
		c.name as memberName, c.email as email, c.phone as phone, d.productsize as shoesize, e.productsize as clothsize
		from cart a
		JOIN product b on a.product_no = b.no 
		JOIN member c on a.member_no = c.no
        JOIN brand f on b.brand_no = f.no
        LEFT OUTER JOIN shoesize d on a.shoesize_no = d.no
        LEFT OUTER JOIN clothsize e on a.clothsize_no = e.no
		where a.member_no = #{memberNo}
	</select>
	
	<update id="updatedecQty" parameterType="CartListDTO">
		update cart set qty = qty - 1 where product_no = #{productNo} and member_no = #{memberNo}
	</update>
	
	<update id="updateincQty" parameterType="CartListDTO">
		update cart set qty = qty + 1 where product_no = #{productNo} and member_no = #{memberNo}
	</update>
	
	<update id="updatePrice" parameterType="CartListDTO">
		update cart set price = (select price from product where no = #{productNo}) * (
		select qty from cart where product_no = #{productNo} and member_no = #{memberNo})
		where product_no = #{productNo} and member_no = #{memberNo}
	</update>
	
	<update id="updateDCPrice" parameterType="CartListDTO">
		update cart set dcprice = (select price from product where no = #{productNo}) * (
		select qty from cart where product_no = #{productNo} and member_no = #{memberNo})
		where product_no = #{productNo} and member_no = #{memberNo}
	</update>
	
	<delete id="deleteCartPro" parameterType="CartListDTO">
		delete from cart where product_no = #{productNo} and member_no = #{memberNo}
	</delete>
	
	<select id="selectCartTotal" parameterType="CartListDTO" resultType="CartListDTO">
		select sum(price) as totalPrice from cart where member_no = #{memberNo}
	</select>
	
	<select id="checkoutUserInfo" parameterType="MemberDTO" resultType="MemberDTO">
		select name, email, phone from member where no = #{no}
	</select>
	
	<select id="checkoutTotalInfo" parameterType="CartListDTO" resultType="CartListDTO">
		select distinct (select sum(price) from cart where member_no = #{memberNo}) as memberPrice, 
       (select sum(dcprice) from cart where member_no = #{memberNo}) as productPrice
		from cart
	</select>
	
	<select id="getCouponList" parameterType="CouponDTO" resultType="CouponDTO">
		select a.no as no, a.member_no as memberNo, a.brand_no as brandNo, a.title, a.classification,
		a.amount, a.duetime, a.type, a.useddate, b.name as brandname, b.engname as brandengname
		from coupon a
		join brand b on a.brand_no = b.no
		where member_no = #{memberNo}
		and a.brand_no in (select distinct c.no from cart a
		                    join product b
		                    on a.product_no = b.no
		                    join brand c
		                    on b.brand_no = c.no
		                    where a.member_no = #{memberNo})
	</select>
	
	<select id="getCouponCard" parameterType="CouponDTO" resultType="CouponDTO">
		select  a.no, a.title, a.amount, a.duetime, a.type, b.name as brandname, b.engname as brandengname
		from coupon a join brand b
		on a.brand_no = b.no where a.no = #{no}
	</select>
	
	<select id="selectDcproduct" parameterType="CartListDTO" resultType="CartListDTO">
		select * from (select a.no as productNo, a.name from product a 
		join coupon b
		on a.brand_no = b.brand_no
		join cart c
		on a.no = c.product_no
		where b.no = #{couponNo}
		and c.member_no = #{memberNo}
		order by a.price desc)
		where rownum = 1
	</select>
	
	<select id="selectDcproductPrice" parameterType="CartListDTO" resultType="CartListDTO">
		select (case when type = 0 then (select price from cart where product_no = #{productNo}) * (100 - amount) / 100
		when type = 1 then (select price from cart where product_no = #{productNo}) - amount end) as productPrice
		from coupon where no = #{couponNo}
	</select>
	
	<update id="applyDiscount" parameterType="CartListDTO">
		update cart set dcprice = (select 
		case when type = 0 then (select price from cart where product_no = #{productNo}) * (100 - amount) / 100
		when type = 1 then (select price from cart where product_no = #{productNo}) - amount end
		from coupon where no = #{couponNo}) where product_no = #{productNo} and member_no = #{memberNo}
	</update>
	
	<select id="getPointAmount" parameterType="CouponDTO" resultType="PointDTO">
		select sum(amount) as amount from point where member_no = #{memberNo}
	</select>
	
	<select id="applyPoint" parameterType="PointDTO" resultType="CartListDTO">
		select distinct (select sum(price) from cart where member_no = #{memberNo}) as memberPrice, 
       (select sum(dcprice) from cart where member_no = #{memberNo}) - #{amount} as productPrice
		from cart
	</select>
	
	<insert id="usePoint" parameterType="PointDTO">
		Insert Into point values (point_id_seq.nextval, -#{amount}, to_date(sysdate,'yyyy.mm.dd hh24:mi'),
		'결제 포인트 사용', #{memberNo})
	</insert>
	
	<select id="getStoreInfo" parameterType="StoreDTO" resultType="StoreDTO">
		select no, name, adderss as address from store where no = #{no}
	</select>
	
	<insert id="insertInitialCheck" parameterType="OrderedDTO">
		INSERT INTO ordered (no, orderdate, status, price, usedpoint, member_no) values (ordered_id_seq.nextval, to_date(sysdate,'yyyy.mm.dd hh24:mi'),
		1, 0, 0, #{memberNo})
	</insert>
	
	<select id="getOrderno" parameterType="OrderedDTO" resultType="OrderedDTO">
		select no from ordered where status = 1 and member_no = #{memberNo}
	</select>
	
	<insert id="insertOrderedProduct" parameterType="OrderedDTO">
		INSERT INTO orderedproduct (no, ordered_no, status, product_no, clothsize_no, shoesize_no, qty)
		select orderedproduct_id_seq.nextval, #{no}, 0, a.product_no, a.clothsize_no, a.shoesize_no, a.qty
		from cart a
		where member_no = #{memberNo}
	</insert>
	
	<update id="updateDelivery" parameterType="OrderedDTO">
		update ordered set recieve = 0 where no = #{no}
	</update>
	
	<update id="updateDirect" parameterType="OrderedDTO">
		update ordered set recieve = 1 where no = #{no}
	</update>
	
	<update id="updateDeliveradd" parameterType="OrderedDTO">
		update ordered set address = #{address} where no = #{no}
	</update>
	
	<update id="updateDirectStore" parameterType="OrderedDTO">
		update ordered set store_no = #{storeNo} where no = #{no}
	</update>
	
	<update id="updateReserveDate" parameterType="OrderedDTO">
		update ordered set reservedate = to_date(#{reserveDate}, 'yyyy/mm/dd hh24:mi:ss') where no = #{no}
	</update>
	
	<update id="saveorderedPoint" parameterType="OrderedDTO">
		update ordered set usedpoint = #{price} where no = #{no}
	</update>
	
	<update id="updatepointPrice" parameterType="OrderedDTO">
		update ordered set price = (select sum(dcprice) from cart where member_no = 1) - #{price} where no = #{no}
	</update>
	
	<update id="updatestatus" parameterType="OrderedDTO">
		update ordered set status = 2 where no = #{no}
	</update>
	
	<delete id="deleteMemberCart" parameterType="OrderedDTO">
		delete from cart where member_no = #{memberNo}
	</delete>
	
	<select id="selectOrderedList" parameterType="CartListDTO" resultType="OrderedDTO">
		select no, orderdate as orderDate, recieve, usedpoint as usedPoint, price from ordered
		where member_no = #{memberNo} and status = 1
	</select>
	
	<insert id="addToCart" parameterType="CartDTO">
		<choose>
			<when test='shoesizeNo == 0'>
				INSERT INTO cart (no, product_no, member_no, price, dcprice, shoesize_no, clothsize_no) 
				values(cart_id_seq.nextval, #{productNo}, #{memberNo}, #{price}, #{price}, null, #{clothsizeNo})
			</when>
			<otherwise>
				INSERT INTO cart (no, product_no, member_no, price, dcprice, shoesize_no, clothsize_no) 
				values(cart_id_seq.nextval, #{productNo}, #{memberNo}, #{price}, #{price}, #{shoesizeNo}, null)
			</otherwise>
		</choose>
	</insert>
	
	<insert id="addToZzim" parameterType="CartDTO">
		INSERT INTO ZZIM VALUES(zzim_id_seq.nextval, #{productNo}, #{memberNo})
	</insert>
</mapper>
